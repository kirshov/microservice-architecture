version: '3.5'

services:
  nginx:
    build:
      context: ./.docker/nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "82:82"
      - "83:83"
    depends_on:
      - users-service
      - app-auth

  users-service:
    build:
      context: ./.docker/users-service
    container_name: users-service
    volumes:
      - ./app:/app
      - ./app/config:/app/config
      - ./app/var/cache:/app/var/cache

  app-auth:
    build:
      context: ./.docker/app-auth
    container_name: app-auth
    environment:
      POSTGRES_HOST: 'service-postgres'
      POSTGRES_DB: 'arch'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres_pass'
    volumes:
      - ./app-auth:/app-auth

  app-billing:
    build:
      context: ./.docker/app-billing
    container_name: app-billing
    environment:
      POSTGRES_HOST: 'service-postgres'
      POSTGRES_DB: 'arch'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres_pass'
    volumes:
      - ./app-billing:/app-billing

  app-notify:
    build:
      context: ./.docker/app-notify
    container_name: app-notify
    environment:
      POSTGRES_HOST: 'service-postgres'
      POSTGRES_DB: 'arch'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres_pass'
    volumes:
      - ./app-notify:/app-notify

  service-postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_HOST: 'postgres'
      POSTGRES_DB: 'arch'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres_pass'
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    container_name: service-postgres

volumes:
  db-data: