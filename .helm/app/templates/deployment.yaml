apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.serviceMainApp.image }}
          ports:
            - name: {{ .Values.serviceMainApp.port.name }}
              containerPort: {{ .Values.serviceMainApp.port.containerPort }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.serviceMainApp.volumeMounts | nindent 12 }}
          lifecycle:
            {{- toYaml .Values.serviceMainApp.lifecycle | nindent 12 }}

        - name: {{ .Values.serviceNginx.name }}
          image: {{ .Values.serviceNginx.image }}
          ports:
            - name: {{ .Values.serviceNginx.portName }}
              containerPort: {{ .Values.serviceNginx.portNumber }}
          volumeMounts:
            {{- toYaml .Values.serviceNginx.volumeMounts | nindent 12 }}
      volumes:
        {{- toYaml .Values.volumes | nindent 12 }}

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.configMaps.appConfigMap }}
data:
  .env.local: |
    APP_ENV={{ .Values.app.env }}
    APP_SECRET={{ .Values.app.secret }}
    DATABASE_URL={{ .Values.app.dbUrl | quote }}

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.configMaps.nginxConfigMap }}
data:
  app.conf: |
    server {
      listen 80;
      index index.php index.html;
      error_log /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /app/public;

      client_max_body_size 128m;

      location / {
        try_files $uri $uri/ /index.php?$args;
      }

      location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
      }
    }

---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.migrationJob.name }}
  annotations:
    "helm.sh/hook": post-install
spec:
  template:
    spec:
      containers:
        {{- toYaml .Values.migrationJob.containers | nindent 12 }}
      restartPolicy: {{ .Values.migrationJob.restartPolicy }}
      volumes:
        {{- toYaml .Values.migrationJob.volumes | nindent 12 }}
  backoffLimit: {{ .Values.migrationJob.backoffLimit }}